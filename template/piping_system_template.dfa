#! NX/KF 4.0 - Curved pipe demo v0.5
DefClass:piping_system_template (ug_base_part);
# Set of default parameters for the part
(number parameter) rail_height: 291; # From rail example
(number parameter) radius: rail_height:/2; # From rail example

(number parameter) environmentX: 10000;
(number parameter) environmentY: 6000;
(number parameter) environmentZ: 5000;

#EQUIPMENT1
(number parameter) eq1_sizeX: 500;
(number parameter) eq1_sizeY: 800;
(number parameter) eq1_sizeZ: 350;
(number parameter) eq1_posX: 1000;
(number parameter) eq1_posY: 3000;
(number parameter) eq1_posZ: 4000;

#EQUIPMENT2
(number parameter) eq2_sizeX: 500;
(number parameter) eq2_sizeY: 680;
(number parameter) eq2_sizeZ: 800;
(number parameter) eq2_posX: 5000;
(number parameter) eq2_posY: 5000;
(number parameter) eq2_posZ: 2000;

#EQUIPMENT3
(number parameter) eq3_sizeX: 620;
(number parameter) eq3_sizeY: 950;
(number parameter) eq3_sizeZ: 290;
(number parameter) eq3_posX: 8000;
(number parameter) eq3_posY: 2000;
(number parameter) eq3_posZ: 4000;

	
(number parameter) x: 100-rail_height:/2;
(number parameter) y: 100;
(number parameter) z: 0;

(number parameter) rotX: 1;
(number parameter) rotY: 1;
(number parameter) rotZ: 1;

# Curve to follow
(number parameter) curve_radius: 500;

#+
---------------ENVIRONMENT-----------------
#-

(Child) environment_line1: {
 Class, ug_line; 
 Start_Point, Point(0,0,0); 
 End_Point, Point(environmentX:,0,0); 
}; 

(Child) environment_line2: {
 Class, ug_line; 
 Start_Point, Point(0,0,0); 
 End_Point, Point(0,environmentY:,0); 
}; 

(Child) environment_line3: {
 Class, ug_line; 
 Start_Point, Point(0,0,0); 
 End_Point, Point(0,0,environmentZ:); 
}; 

(Child) environment_line4: {
 Class, ug_line; 
 Start_Point, Point(environmentX:,0,0); 
 End_Point, Point(environmentX:,environmentY:,0); 
}; 

(Child) environment_line5: {
 Class, ug_line; 
 Start_Point, Point(environmentX:,0,0); 
 End_Point, Point(environmentX:,0,environmentZ:); 
}; 

(Child) environment_line6: {
 Class, ug_line; 
 Start_Point, Point(environmentX:,environmentY:,0); 
 End_Point, Point(environmentX:,environmentY:,environmentZ:); 
}; 

(Child) environment_line7: {
 Class, ug_line; 
 Start_Point, Point(0,environmentY:,0); 
 End_Point, Point(0,environmentY:,environmentZ:); 
}; 

(Child) environment_line8: {
 Class, ug_line; 
 Start_Point, Point(0,environmentY:,0); 
 End_Point, Point(environmentX:,environmentY:,0); 
}; 

(Child) environment_line9: {
 Class, ug_line; 
 Start_Point, Point(0,environmentY:,environmentZ:); 
 End_Point, Point(environmentX:,environmentY:,environmentZ:); 
}; 

(Child) environment_line10: {
 Class, ug_line; 
 Start_Point, Point(0,0,environmentZ:); 
 End_Point, Point(0,environmentY:,environmentZ:); 
}; 

(Child) environment_line11: {
 Class, ug_line; 
 Start_Point, Point(environmentX:,0,environmentZ:); 
 End_Point, Point(environmentX:,environmentY:,environmentZ:); 
}; 

(Child) environment_line12: {
 Class, ug_line; 
 Start_Point, Point(0,0,environmentZ:); 
 End_Point, Point(environmentX:,0,environmentZ:); 
}; 

#+
---------------EQUIPMENT------------------
#-
(child) equipment1: {
class, ug_block;
length, eq1_sizeX:;
width, eq1_sizeY:;
height, eq1_sizeZ:;
origin, Point(eq1_posX:,eq1_posY:,eq1_posZ:);
direction, vector(0,1,0);
};

(child) equipment2: {
class, ug_block;
length, eq2_sizeX:;
width, eq2_sizeY:;
height, eq2_sizeZ:;
origin, Point(eq2_posX:,eq2_posY:,eq2_posZ:);
direction, vector(0,1,0);
};

(child) equipment3: {
class, ug_block;
length, eq3_sizeX:;
width, eq3_sizeY:;
height, eq3_sizeZ:;
origin, Point(eq3_posX:,eq3_posY:,eq3_posZ:);
direction, vector(0,1,0);
};

#+
---------------PIPE_PATH------------------
#-

#PATH
(List canonical) pipe_path: {Point(0, 0, 0), Point(1, 1, 1), Point(2, 2, 2), Point(3, 3, 3), Point(4, 4, 4), Point(5, 5, 5)};

#Loop to generate line path for the pipe
(list) pipe_line: loop
{
    for $x in pipe_path:;
    collect loop {

        do printValue($x);
        append {ug_createInstance(
        {
            class, ug_line; 
            Start_Point, $x; 
            End_Point, Point(0,0,0); 
            };);
        };
        };
};
(list) DemandValue: {pipe_line:};

#+
#Forming a profile for a pipe
(child) the_profile: { 
  class, ug_arc;
  radius, radius:;
  start_angle, 0;
  end_angle, 360;
  center, point(x:+curve_radius:,y:,z:);
  X_Axis, Vector(1, 0, 0);
  Y_Axis, Vector(0, 0, 1);
};


#Elements of the path start to form
(child) curve_1: { 
  class, ug_arc;
  radius, curve_radius:;
  start_angle, 0;
  end_angle, 180;
  center, point(x:,y:,z:);
};

(Child) line_13: {
 Class, ug_line; 
 Start_Point, Point(-curve_radius:+x:,y:,z:); 
 End_Point, Point(-curve_radius:+x:,-4000+y:,z:); 
}; 

(child) curve_2: { 
  class, ug_arc;
  radius, curve_radius:;
  start_angle, 180;
  end_angle, 360;
  center, point((-2*curve_radius:)+x:,-4000+y:,z:);
};
#-

#+
--------------PIPE-----------------
#-
#+
(child) pipe_profile: {
  Class, ug_curve_join;
  profile, {the_profile:};
};
(child) pipe_path: {
  Class, ug_curve_join;
  profile, {curve_1:,line_13:,curve_2:};
};
(child) pipe_1: {
  class, ug_swept;
  guide, {{forward, pipe_path:}};
  section, {{forward, pipe_profile:}};
  scaling, {scale_constant, 1};
  alignment_init, parameter;
  orientation, {orientation_fixed};
  tolerances, {0, 0, 0};
};

# Colored rail - emulating the "rail"
(Child) pipe_colored:
{
  Class, ug_body;
  Feature, {pipe_1:};
  Layer, 1;
  color, ug_askClosestColor(BLUE);
};
#-